unit Unit1;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, ExtCtrls,
  StdCtrls, Colaarreglos, Pilasarreglos, Tipos;

type

  { TForm1 }
  cajas= array [1..5] of cola;

  TForm1 = class(TForm)
    Button1: TButton;
    EditPlata: TEdit;
    Label2: TLabel;
    Limpiar: TButton;
    Label1: TLabel;
    ListBox1: TListBox;
    Mostrar: TButton;
    entrada: TEdit;
    Ubicar: TButton;

    procedure Button1Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure LimpiarClick(Sender: TObject);
    procedure MostrarClick(Sender: TObject);
    procedure UbicarClick(Sender: TObject);

  private
    { private declarations }
  public
    { public declarations }

  end;

var
  Form1: TForm1;
  Caj: cajas;
  ColBancos: cola;
  pil:pila;


implementation

{$R *.lfm}

{ TForm1 }

procedure cargar(var col:cola);
var
  x,y:tipoelemento;
  bandera:boolean;
  colaux:cola;
begin
  x.DS:= form1.entrada.Text;
  x.DN:= strtoint(form1.EditPlata.Text);
  col.Encolar(x);
  colaux.Crearvacia;
end;

function gcd(a, b: integer): integer;
begin
  if b = 0 then
    result := a
  else
    result := gcd(b, a mod b);
end;

procedure divisores(var col: cola);
var
  x, y: tipoelemento;
  divisor: integer;
begin
  while not col.Esvacia() do
  begin
    col.Recuperarfrente(x);
    col.Desencolar();

    divisor := x.DN; // Inicializar el divisor con el primer elemento de la cola
    y := x; // Asignar el primer elemento de la cola a 'y'

    // Caso especial: cola con un solo elemento
    if col.Esvacia() then
    begin
      if divisor = 1 then
        form1.ListBox1.Items.Add('Banco: ' + x.DS + ' --- No tiene divisor')
      else
        form1.ListBox1.Items.Add('Banco: ' + x.DS + ' --- Divisor: ' + inttostr(divisor));
      Break; // Salir del while
    end;

    while (not col.Esvacia()) and (y.DS = x.DS) do
    begin
      col.Recuperarfrente(y);
      col.Desencolar();

      divisor := gcd(divisor, y.DN); // Calcular el MCD entre el divisor actual y el nuevo elemento
    end;

    if divisor = 1 then // Si el divisor sigue siendo igual al primer elemento de la cola
    begin
      form1.ListBox1.Items.Add('Banco: ' + x.DS + ' --- No tiene divisor');
    end
    else
    begin
      form1.ListBox1.Items.Add('Banco: ' + x.DS + ' --- Divisor: ' + inttostr(divisor));
    end;
  end;
end;

 { if col.Esvacia() then
    col.Encolar(x)
  else
  begin
    while not col.Esvacia() do
    begin
      col.Recuperarfrente(y);
      col.Desencolar();
      if y.DS = x.DS then
      begin
        y.DN:= y.DN + x.DN;
        bandera:=true;
        colaux.Encolar(y);
      end
      else
      begin
        colaux.Encolar(y);
      end;
    end;

    while not colaux.Esvacia() do
    begin
      colaux.Recuperarfrente(y);
      colaux.Desencolar();
      col.Encolar(y);
    end;

    if not bandera then
      col.Encolar(x);
  end;    }


procedure mosmul(col:cola);
var
  x:tipoelemento;
  s:string;
begin
  form1.ListBox1.Clear;
  while not col.Esvacia() do
        begin
             col.Recuperarfrente(x);
             col.Desencolar();
             form1.ListBox1.Items.Add('Banco: ' + x.DS + ' --- Monto: ' +inttostr(x.DN));
        end;
end;


procedure TForm1.FormCreate(Sender: TObject);
begin
  ColBancos.Crearvacia;
  pil.Crearvacia;
end;

procedure TForm1.Button1Click(Sender: TObject);
begin
  divisores(ColBancos);
end;



procedure TForm1.LimpiarClick(Sender: TObject);
begin
  form1.ListBox1.Clear;
end;


procedure TForm1.MostrarClick(Sender: TObject);
begin
  mosmul(ColBancos);
end;

procedure TForm1.UbicarClick(Sender: TObject);
begin
  cargar(ColBancos);
end;



end.
